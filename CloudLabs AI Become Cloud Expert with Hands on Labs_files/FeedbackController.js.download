(function () {
    'use strict';
    angular
        .module('cloudsandbox.studentportal')
        .controller('FeedbackController', FeedbackController);

    FeedbackController.$inject = ['$scope', '$state', '$location', 'ModalService', 'DataService', 'adalAuthenticationService'];
    /// <summary>
    /// Controller for feedback page.
    /// </summary>
    function FeedbackController($scope, $state, $location, ModalService, DataService, adalService) {
        var vm = this;
        var obj = {}, temp = [], i;
        var toSend = {};
        //if (adalService.userInfo.isAuthenticated)
        //    toSend['UserEmail'] = adalService.userInfo.profile.unique_name;

        /// <summary>
        /// Gets the poll from the GUID in the URL
        /// </summary>
        DataService.getPoll($location.absUrl().split('?')[1]).then(function (response) {

            if (response.EventBannerText) {
                $scope.constant.mainHeading = response.EventBannerText;
            }
            if (response.CustomPrivacyUrl) {
                $scope.constant.privacyPolicyLink = response.CustomPrivacyUrl;
            }

            if (response.Status == "Ready") {
                toSend['PollId'] = response.Id;
                $scope.pollData = response;
                $scope.questionModel = response.Questions; //an array of objects, each object being one question
            }
            else {
                $state.go('main.error');
            }
        })
        .catch(function (error) {
            //console.log(error);
            $state.go('main.error');
        });

        /// <summary>
        /// Get selected data from the directive
        /// </summary>
        $scope.selectedVal = function (qID, value) {
            if (qID) {
                //TODO: Optimise for when question is of type checkbox
                //NOTE: Store checkbox answers as one comma separated string 
                $scope.questionModel.filter(function (question) {
                    if (question.Type === 'checkbox' && question.Id == qID) {
                        temp = value.filter(function (val) {
                            return val.selected;
                        });
                    }
                });
                if (temp.length > 0) {
                    value = [];
                    for (i = 0; i < temp.length; i++) {
                        value.push(temp[i].Id);
                    }
                    value = value.join(',');
                }
                temp = [];
                obj[qID] = value;
            }
        }

        /// <summary>
        /// Submits the poll and saves the response to the DB
        /// </summary>
        vm.submit = function () {
            ModalService.showModal({
                templateUrl: '../app/views/shared/modal.html',
                controller: "ModalController",
                inputs: {
                    title: "Submit Response?",
                    description: "Are you sure you want to submit your response?",
                    failureButtonText: "Cancel",
                    successButtonText: "Submit"
                }
            }).then(function (modal) {
                modal.element.modal();
                modal.close.then(function (result) {
                    if (result === "Yes") {
                        temp = [];
                        var temp2, flag = 0;

                        //NOTE: split checkbox answers
                        for (var key in obj) {
                            $scope.questionModel.filter(function (question) {
                                if (question.Type === 'checkbox' && question.Id == key) {
                                    temp2 = [];
                                    temp2 = obj[key].split(',');
                                    for (i = 0; i < temp2.length; i++) {
                                        temp.push({ 'QuestionId': key, 'Answer': temp2[i] });
                                        flag = 1;
                                    }
                                }
                            });
                            if (flag === 0) {
                                temp.push({ 'QuestionId': key, 'Answer': obj[key] });
                            }
                            else {
                                flag = 0;
                            }
                        }

                        //NOTE: Check whether any question was left unanswered. If unanaswered, include that question with no answer part.
                        for (i = 0; i < $scope.questionModel.length; i++) {
                            if (!obj.hasOwnProperty($scope.questionModel[i].Id)) {
                                temp.push({ 'QuestionId': $scope.questionModel[i].Id, 'Answer': "" });
                            }
                        }
                        toSend['Responses'] = temp;

                        DataService.sendResponse(toSend).then(function (response) {
                            ModalService.showModal({
                                templateUrl: '../app/views/shared/successModal.html',
                                controller: "ModalController",
                                inputs: {
                                    title: "Success",
                                    description: "Thank you for taking the survey!",
                                    failureButtonText: "",
                                    successButtonText: "OK"
                                }
                            }).then(function (modal) {
                                modal.element.modal();
                                modal.close.then(function (result) {
                                    if (result === "Yes")
                                        $state.go("main.home");
                                })
                            });
                        })
                        .catch(function () {
                            ModalService.showModal({
                                templateUrl: '../app/views/shared/successModal.html',
                                controller: "ModalController",
                                inputs: {
                                    title: "Failed",
                                    description: "We ran into some unexpected trouble. Please try again later.",
                                    failureButtonText: "Cancel",
                                    successButtonText: "OK"
                                }
                            }).then(function (modal) {
                                modal.element.modal();
                                modal.close.then(function (result) {
                                    if (result === "Yes")
                                        $state.go("main.home");
                                })
                            });
                        });
                    }
                });
            });
        }

        //TODO: Implement clear
        //vm.clear = function () {
        //    obj = {};
        //}
    }

})();