(function () {
    'use strict';
    angular
        .module('cloudsandbox.studentportal')
        .controller('OnDemandController', OnDemandController);

    OnDemandController.$inject = ['$scope', '$rootScope', '$state', '$stateParams', '$window', '$location', '$sce', '$timeout', 'notifier', 'DataService', '$http', 'appConstant', 'serviceEndpoint', 'adalAuthenticationService', 'ModalService'];
    /// <summary>
    /// Controller for On Demand and on demand registration page.
    /// </summary>
    function OnDemandController($scope, $rootScope, $state, $stateParams, $window, $location, $sce, $timeout, notifier, DataService, $http, appConstant, serviceEndpoint, adalService, ModalService) {
        $scope.SelectedOnDemandUniqueName = $stateParams.templateId
        $scope.webinar = null;
        var i, email = {}, emailFormat = {}, firstName = {}, lastName = {}, workPhone = {}, organization = {};
        $scope.validOfficeEmail = true;
        $scope.validFirstName = true;
        $scope.validLastName = true;
        $scope.validWorkPhone = true;
        $scope.validOrganization = true;
        $window.scrollTo(0, 0);
        $scope.registered = false;
        $scope.expired = false;
        var userInviteLink = null;

        $scope.initWebinar = function() {
            var userInviteLink = $stateParams.userInviteLink;
            if (userInviteLink != null) {
                $http.get(appConstant.apiRoot + serviceEndpoint.webinarUser + '/GetValidityOfInviteLink/' + userInviteLink)
               .then(function (response) {
                   if (response.data) {
                       $scope.registered = true;
                   }
                   else {
                       $scope.registered = false;
                   }
               });
            }
            else {
                $scope.registered = false;
            }
        };
        $scope.initWebinar();

        // For anonymous users, allow to view the webinar without any registration
        $scope.watchNow = function () {
            $scope.registered = true;
        }

        $scope.getOnDemandData = function() {
            $http.get(appConstant.apiRoot + serviceEndpoint.webinar + '/WebinarByUniqueName/' + $scope.SelectedOnDemandUniqueName)
                .then(function (response) {
                    if (response.data != null)
                    {   
                        response.data.Description = $sce.trustAsHtml(response.data.Description);
                        $scope.webinar = response.data;

                        if ($scope.webinar.WebinarBannerText) {
                            $scope.constant.mainHeading = $scope.webinar.WebinarBannerText;
                        }
                        if ($scope.webinar.CustomPrivacyUrl) {
                            $scope.constant.privacyPolicyLink = $scope.webinar.CustomPrivacyUrl;
                        }
                        if ($scope.webinar.CustomPrivacyStatement) {
                            $scope.constant.copyrightMessage = $sce.trustAsHtml($scope.webinar.CustomPrivacyStatement);
                        }
                        
                        if ($scope.webinar.LinkToVideo.includes("vimeo"))
                        {
                            $scope.videoId = DataService.getVideoId($scope.webinar.LinkToVideo);
                            $scope.videoUrl = "https://player.vimeo.com/video/" + $scope.videoId;
                        }
                        else if ($scope.webinar.LinkToVideo.includes("youtube"))
                        {
                            $scope.videoId = DataService.getVideoId($scope.webinar.LinkToVideo);
                            $scope.videoUrl = "https://www.youtube.com/embed/" + $scope.videoId;
                        }
                        $scope.videoUrl = $sce.trustAsResourceUrl($scope.videoUrl);
                    }
                    else
                    {
                        $scope.expired = true;
                    }
                }),
            function () {
                $state.go('main.home');
            };
        };

        $scope.getOnDemandData();

        /// <summary>
        /// Validate first name, last name, organization
        /// </summary>
        $scope.checkIsValidInput = function () {
            var format = /[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]+/;
            var workPhoneFormat = /[!@#$%^&*()_\=\[\]{};':"\\|,.<>\/?]/;
            firstName = $scope.CurrentUser.FirstName;
            lastName = $scope.CurrentUser.LastName;
            workPhone = $scope.CurrentUser.WorkPhone;
            organization = $scope.CurrentUser.Organization;
            if (format.test(firstName))
                $scope.validFirstName = false;
            else
                $scope.validFirstName = true;
            if (format.test(lastName))
                $scope.validLastName = false;
            else
                $scope.validLastName = true;
            if (workPhoneFormat.test(workPhone))
                $scope.validWorkPhone = false;
            else
                $scope.validWorkPhone = true;
            if (format.test(organization))
                $scope.validOrganization = false;
            else
                $scope.validOrganization = true;
        };

        /// <summary>
        /// Validate valid work email
        /// </summary>
        $scope.checkIsWorkEmail = function () {
            email = $scope.CurrentUser.Email.split('@'); //split email into two at '@'
            if (email.length > 1) //check for 2 valid parts
                $scope.validOfficeEmail = true;
            else
                $scope.validOfficeEmail = false;
            emailFormat = email[1].split('.'); //split domain part into two at '.'
            if (emailFormat.length > 1) //check for 2 valid parts
                $scope.validOfficeEmail = true;
            else
                $scope.validOfficeEmail = false;

            //check for valid email parts, between '@' and '.' of domain
            if (emailFormat[0].length == 0 || email[0].length == 0 || emailFormat[1].length == 0 || email[1].length == 0)
                $scope.validOfficeEmail = false;
        };

        $scope.submitOnDemandUser = function () {
            this.frmOnDemandUser.$submitted = true;
            if (this.frmOnDemandUser.$valid) {
                if (typeof ($scope.CurrentUser.Id) === "undefined" || $scope.CurrentUser.Id == null) {
                    $scope.CurrentUser.EventId = $scope.webinar.EventId;
                    $scope.CurrentUser.EventInternalId = $scope.webinar.InternalId;
                    $http.post(appConstant.apiRoot + serviceEndpoint.webinarUser + '/Register', $scope.CurrentUser).
                        then(function (data, status, headers, config) {
                            notifier.notifyInfo("Registration completed successfully");
                            $scope.registered = true;
                        }).catch(function (ex) {
                            notifier.notifyError(ex.data.ErrorDetail);
                        });
                }
            }
        };
    };
})();