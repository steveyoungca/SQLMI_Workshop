(function () {
    'use strict';
    angular
        .module('cloudsandbox.studentportal')
        .controller('EventController', EventController);

    EventController.$inject = ['$scope', '$state', '$window', '$location', '$sce', 'notifier', 'DataService', '$http', 'appConstant', 'serviceEndpoint', 'adalAuthenticationService', 'ModalService'];

    /// <summary>
    /// Controller for event detail and registration page.
    /// </summary>
    function EventController($scope, $state, $window, $location, $sce, notifier, DataService, $http, appConstant, serviceEndpoint, adalService, ModalService) {
        var vm = this;
        var invalidEmails = ["gmail", "yahoo", "hotmail", "live", "outlook"];
        var i, email = {}, emailFormat = {}, firstName = {}, lastName = {}, workPhone = {}, organization = {};
        $scope.validOfficeEmail = true;
        $scope.validFirstName = true;
        $scope.validLastName = true;
        $scope.validWorkPhone = true;
        $scope.validOrganization = true;
        $window.scrollTo(0, 0);
        $scope.registered = false;
        var workshop;
        /// <summary>
        /// If cold get request, return to main
        /// </summary>
        if ($location.absUrl().split('?')[1] == undefined)
            $state.go('main.home');

        DataService.getWorkshopData($location.absUrl().split('?')[1]).then(function (workshop) {
            if (workshop.EventBannerText) {
                $scope.constant.mainHeading = workshop.EventBannerText;
            }
            if (workshop.CustomPrivacyUrl) {
                $scope.constant.privacyPolicyLink = workshop.CustomPrivacyUrl;
            }
            if (workshop.CustomPrivacyStatement) {
                $scope.constant.copyrightMessage = $sce.trustAsHtml(workshop.CustomPrivacyStatement);
            }

            workshop.Description = $sce.trustAsHtml(workshop.Description);
            $http.get(appConstant.apiRoot + serviceEndpoint.instructors + '/GetInstructorsByEventId/' + workshop.Id)
                .then(function (instructorData) {
                    if (instructorData.data != null) {
                        workshop.Instructors = instructorData.data;
                    }
                    $scope.workshop = workshop;
                    $scope.CurrentWorkshop = workshop;
                    $scope.showContent = true;
                });
        })
            .catch(function () {
                $state.go('main.error');
                //$state.go('main.home');
            });

        /// <summary>
        /// Check for user login
        /// </summary>
        //if (adalService.userInfo.isAuthenticated) {
        //    $scope.showLogin = false;
        //    $scope.name = adalService.userInfo.profile.name;
        //    //console.log(adalService.userInfo.profile);
        //    $scope.CurrentUser = {};
        //    $scope.CurrentUser.FirstName = adalService.userInfo.profile.given_name;
        //    $scope.CurrentUser.LastName = adalService.userInfo.profile.family_name;
        //    $scope.CurrentUser.Email = adalService.userInfo.profile.unique_name;
        //}

        /// <summary>
        /// Validate first name, last name, organization
        /// </summary>
        $scope.checkIsValidInput = function () {
            var format = /[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]+/;
            var workPhoneFormat = /[!@#$%^&*()_\=\[\]{};':"\\|,.<>\/?]/;
            firstName = $scope.CurrentUser.FirstName;
            lastName = $scope.CurrentUser.LastName;
            workPhone = $scope.CurrentUser.WorkPhone;
            organization = $scope.CurrentUser.Organization;
            if (format.test(firstName))
                $scope.validFirstName = false;
            else
                $scope.validFirstName = true;
            if (format.test(lastName))
                $scope.validLastName = false;
            else
                $scope.validLastName = true;
            if (workPhoneFormat.test(workPhone))
                $scope.validWorkPhone = false;
            else
                $scope.validWorkPhone = true;
            if (format.test(organization))
                $scope.validOrganization = false;
            else
                $scope.validOrganization = true;
        }

        /// <summary>
        /// Validate valid work email
        /// </summary>
        $scope.checkIsWorkEmail = function () {
            email = $scope.CurrentUser.Email.split('@'); //split email into two at '@'
            if (email.length > 1) //check for 2 valid parts
                $scope.validOfficeEmail = true;
            else
                $scope.validOfficeEmail = false;
            emailFormat = email[1].split('.'); //split domain part into two at '.'
            if (emailFormat.length > 1) //check for 2 valid parts
                $scope.validOfficeEmail = true;
            else
                $scope.validOfficeEmail = false;

            //check for valid email parts, between '@' and '.' of domain
            if (emailFormat[0].length == 0 || email[0].length == 0 || emailFormat[1].length == 0 || email[1].length == 0)
                $scope.validOfficeEmail = false;

            if (!$scope.workshop.SupportSocialSignup) {
                if ($scope.validOfficeEmail) //if all validations passed
                {
                    for (i = 0; i < invalidEmails.length; i++) {
                        if (emailFormat[0].toLowerCase() == invalidEmails[i]) //check if from public domain
                        {
                            $scope.validOfficeEmail = false;
                            break;
                        }
                        else {
                            $scope.validOfficeEmail = true;
                        }
                    }
                }
            }
            else {
                $scope.validOfficeEmail = true;
            }
        };

        /// <summary>
        /// Submit user details (for event registration)
        /// </summary>
        $scope.submitUser = function (code) {
            this.frmManageUser.$submitted = true;
            if (this.frmManageUser.$valid) {
                if ($state.params.code != null)
                    $scope.CurrentWorkshop = DataService.getWorkshopData($state.params.code);

                if ($scope.validOfficeEmail) {
                    $scope.CurrentUser.TrafficSource = null;
                    if ($scope.Traffic) {
                        if ($scope.Traffic.Source == 'Other')
                            $scope.CurrentUser.TrafficSource = $scope.Traffic.Attribution;
                        else
                            $scope.CurrentUser.TrafficSource = $scope.Traffic.Source;
                    }

                    if ($scope.CurrentWorkshop.IsPaid && !$scope.CurrentWorkshop.IsMaxCountReach) {
                        $http.get(appConstant.apiRoot + serviceEndpoint.users + '?email=' + $scope.CurrentUser.Email + '&workshopId=' + encodeURIComponent($scope.CurrentWorkshop.InternalId)).then(function (response) {
                            if (response.data == true) {
                                notifier.notifyError("The user has already registered for this workshop");
                            }
                            else {
                                ModalService.showModal({
                                    templateUrl: '../app/views/shared/ticketModal.html',
                                    controller: "TicketModalController",
                                    inputs: {
                                        workshopId: $scope.CurrentWorkshop.Id,
                                        title: "Choose your ticket",
                                    }
                                }).then(function (modal) {
                                    modal.element.modal();
                                    modal.close.then(function (result) {
                                        if (result.Id) {
                                            $scope.CurrentUser['EventId'] = $scope.CurrentWorkshop.Id;
                                            $scope.CurrentUser['EventInternalId'] = $scope.CurrentWorkshop.InternalId;
                                            $scope.CurrentUser['EventUserRoleId'] = 1;
                                            var paymentData = { workshop: $scope.workshop, ticket: result }
                                            var userData = { UserData: $scope.CurrentUser, TicketData: result }
                                            $http.post(appConstant.apiRoot + '/api/WSTickets/ReserveTicket?type=new', userData)
                                                .then(function (response) {
                                                    paymentData["userId"] = response.data;
                                                    $state.go('main.payment', { data: paymentData });
                                                });
                                        }
                                    });
                                });
                            }
                        });
                    }
                    else {
                        if (typeof ($scope.CurrentUser.Id) === "undefined" || $scope.CurrentUser.Id == null) {
                            $http.post(appConstant.apiRoot + '/api/WorkshopUser/Register?workshopId=' + encodeURIComponent($scope.CurrentWorkshop.InternalId), $scope.CurrentUser).
                                then(function (data, status, headers, config) {
                                    notifier.notify("Registration completed successfully");
                                    $scope.registered = true;
                                }
                                , function (ex) {
                                    notifier.notifyError(ex.data.ErrorDetail);
                                });
                        }
                    }
                }

            }
        }

        $scope.shareToFacebook = function () {
            var eventUrl = encodeURIComponent($location.absUrl());
            window.open('https://www.facebook.com/sharer/sharer.php?u=' + eventUrl, '_blank', 'toolbar=0, location=0, directories=0, status=0, scrollbars=0, resizable=0, copyhistory=0, menuBar=0, width=640, height=480'); return (false);
        }

        $scope.shareToTwitter = function () {
            var eventUrl = encodeURIComponent($location.absUrl());
            var eventName = encodeURIComponent('Check out this hands-on lab - ' + $scope.CurrentWorkshop.Title + ' at');
            //var url = "https://twitter.com/home?status=" + eventName + "%20" + eventUrl;
            var twurl = "https://twitter.com/intent/tweet?url=" + eventUrl + "&text=" + eventName + "&hashtags=LearnItAll,DoItAll";

            if ($scope.CurrentWorkshop.Tags != null)
            {
                twurl = twurl + "," + $scope.CurrentWorkshop.Tags
            }

            window.open(twurl, '_blank', 'toolbar=0, location=0, directories=0, status=0, scrollbars=0, resizable=0, copyhistory=0, menuBar=0, width=640, height=480'); return (false);
        }

        $scope.shareToLinkedIn = function () {
            var eventUrl = encodeURIComponent($location.absUrl());
            var eventName = encodeURIComponent($scope.CurrentWorkshop.Title);
            var url = "https://www.linkedin.com/shareArticle?mini=true&url=" + eventUrl + "&title=" + eventName + "&summary=Microsoft%20Cloud%20Workshops,%20from%20Spektra%20Systems&source=";
            window.open(url, '_blank', 'toolbar=0, location=0, directories=0, status=0, scrollbars=0, resizable=0, copyhistory=0, menuBar=0, width=640, height=480'); return (false);
        }
    }

})();