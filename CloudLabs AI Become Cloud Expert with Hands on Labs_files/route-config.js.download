(function () {
    'use strict';

    angular.module('cloudsandbox.studentportal')
        .config(['$stateProvider', '$urlRouterProvider', '$locationProvider', 'appConstant', function ($stateProvider, $urlRouterProvider, $locationProvider, appConstant) {
        $urlRouterProvider.otherwise("/main");
        $stateProvider
            .state('main', {
                abstract: true,
                templateUrl: "../app/views/shared/template.html?v=" + appConstant.buildVersion
            })
            .state('main.home', {
                url: '/main',
                templateUrl: "../app/views/main.html?v=" + appConstant.buildVersion,
                controller: "MainController",
                controllerAs: 'vm',
            })
            //error
            .state('main.error', {
                url: '/error',
                templateUrl: '../app/views/error.html',
                data: { pageTitle: 'Welcome to Azure Events' },
                controller: "ErrorController",
                params: { ErrorMessage: null, ErrorStatus: null, ReturnToState: null }
            })
            .state('main.profile', {
                url: '/instructor/:name',
                templateUrl: '../app/views/profile.html',
                data: { pageTitle: 'Welcome to Azure Events' },
                controller: "ProfileController",
                controllerAs: 'vm'
            })
            .state('main.partnerprofile', {
                url: '/providers',
                templateUrl: '../app/views/partnerprofile.html',
                data: { pageTitle: 'Welcome to Azure Events' },
                controller: "PartnerprofileController",
                controllerAs: 'vm'
            })
            .state('main.terms', {
                url: '/terms-of-service',
                templateUrl: "../app/views/shared/terms.html"
            })
            .state('main.privacy', {
                url: '/privacy-policy',
                templateUrl: "../app/views/shared/privacy.html"
            })
            .state('main.survey', {
                url: '/survey',
                templateUrl: "../app/views/feedback.html",
                controller: "FeedbackController",
                controllerAs: 'vm'
            })
            .state('main.feedbacks', {
                url: '/feedbacks/:testdriveId/:userInviteLink',
                templateUrl: "../app/views/IndependentSurveyPage.html",
                controller: "GitDocGeneratorController",
                controllerAs: 'vm'
            })
            .state('main.event', {
                url: '/event',
                templateUrl: "../App/Views/event.html?v=" + appConstant.buildVersion,
                controller: "EventController",
                controllerAs: 'vm'
            })
            .state('main.calendarTracks', {
                url: '/schedule',
                templateUrl: "../App/Views/calendar.html?v=" + appConstant.buildVersion,
                controller: "CalendarTrackController",
                controllerAs: 'vm'
            })
            .state('main.calendarTrack', {
                url: '/schedule/:trackUniqueName',
                templateUrl: "../App/Views/calendarTrack.html?v=" + appConstant.buildVersion,
                controller: "CalendarTrackController",
                controllerAs: 'vm'
            })
            .state('main.payment', {
                url: '/payment',
                templateUrl: "../App/Views/payment.html?v=" + appConstant.buildVersion,
                controller: "PaymentController",
                controllerAs: 'vm',
                params: { data: null }
            })
            .state('main.testdrive', {
                url: '/odl/:testdriveId',
                templateUrl: "../App/Views/testdrive.html?v=" + appConstant.buildVersion,
                controller: "TestDriveController",
                controllerAs: 'vm'
            })
            .state('main.mockexam', {
                url: '/mockexam/:examId/:userInviteLink',
                templateUrl: "../App/Views/mockExam.html?v=" + appConstant.buildVersion,
                controller: "MockExamController",
                controllerAs: 'vm'
            })
            .state('main.learningpath', {
                url: '/learn/:testdriveId',
                templateUrl: "../App/Views/learningpath/registration.html?v=" + appConstant.buildVersion,
                controller: "LearningPathController",
                controllerAs: 'vm'
            })
            .state('main.learningpathuser', {
                url: '/learn/:testdriveId/:userInviteLink',
                templateUrl: "../App/Views/learningpath/courses.html?v=" + appConstant.buildVersion,
                controller: "LearningPathController",
                controllerAs: 'vm'
            })
            .state('main.privatesubscription', {
                url: '/odl/:testdriveId/private_subscription',
                templateUrl: "../App/Views/privateSubscription.html?v=" + appConstant.buildVersion,
                controller: "PrivateSubscriptionController",
                controllerAs: 'vm'
            })
            .state('main.leaderboard', {
                url: '/odl/:testdriveId/leaderboard',
                templateUrl: "../App/Views/leaderboard.html?v=" + appConstant.buildVersion,
                controller: "TestDriveController",
                controllerAs: 'vm'
            })
            .state('main.testdriveuser', {
                url: '/odl/:testdriveId/:userInviteLink',
                templateUrl: "../App/Views/testdrive.html?v=" + appConstant.buildVersion,
                controller: "TestDriveController",
                controllerAs: 'vm'
            })
            .state('main.webinar', {
                url: '/webinar/:templateId',
                templateUrl: "../App/Views/ondemand.html?v=" + appConstant.buildVersion,
                controller: "OnDemandController",
                controllerAs: 'vm'
            })
            .state('main.webinaruser', {
                url: '/webinar/:templateId/:userInviteLink',
                templateUrl: "../App/Views/ondemand.html?v=" + appConstant.buildVersion,
                controller: "OnDemandController",
                controllerAs: 'vm'
            })
            .state('main.unregister', {
                url: '/unregister',
                templateUrl: "../App/Views/error.html",
                controller: "UnregisterController",
                controllerAs: 'vm',
                params: { code: null }
            })
            .state('main.quizAdmin', {
                url: '/funquiz/:quizUid',
                templateUrl: "../App/Views/funQuizInstructor.html?v=" + appConstant.buildVersion,
                controller: "InstructorQuizController",
                controllerAs: 'vm'
            })
            .state('main.quizAtendee', {
                url: '/funquiz/:quizUid/participant',
                templateUrl: "../App/Views/funQuizAttendee.html?v=" + appConstant.buildVersion,
                controller: "AttendeeQuizController",
                controllerAs: 'vm'
            })
            .state('main.gitDoc', {
                url: '/labenvironment/:testdriveId/:userInviteLink/:vmLaunchURL',
                templateUrl: "../App/Views/gitdoc.html?v=" + appConstant.buildVersion,
                controller: "GitDocGeneratorController",
                controllerAs: 'vm'
            })
            .state('main.labguide', {
                url: '/labguide/:testdriveId/:userInviteLink',
                templateUrl: "../App/Views/labguide.html?v=" + appConstant.buildVersion,
                controller: "GitDocGeneratorController",
                controllerAs: 'vm'
            })
            .state('main.labguideShortcut', {
                url: '/labguideShortcut/:encryptedDeploymentId',
                controller: "LabGuideShortcutController",
                controllerAs: 'vm'
            })
            .state('main.labguideDirectShortcut', {
                url: '/labguideDirectShortcut/:deploymentId',
                controller: "LabGuideShortcutController",
                controllerAs: 'vm'
            })
            .state('main.labtrial', {
                url: '/labtrial/:testdriveId/:userInviteLink',
                templateUrl: "../App/Views/labguide.html?v=" + appConstant.buildVersion,
                controller: "GitDocGeneratorController",
                controllerAs: 'vm'
            })
            .state('main.confirmEmailAttention', {
                url: '/confirm/:confirmationUid/:emailType',
                templateUrl: "../App/Views/emailConfirmationPage.html?v=" + appConstant.buildVersion,
                controller: "EmailConfirmationController",
                controllerAs: 'vm'
            })
            .state('main.channel', {
                url: '/:channelUniqueName',
                templateUrl: "../App/Views/channelmode.html?v=" + appConstant.buildVersion,
                controller: "ChannelController",
                controllerAs: 'vm'
            })
            .state('main.channelmode', {
                url: '/:channelUniqueName/:channelmode',
                templateUrl: "../App/Views/channelmode.html?v=" + appConstant.buildVersion,
                controller: "ChannelController",
                controllerAs: 'vm'
            });
        //$locationProvider.html5Mode({
        //    enabled: true,
        //    requireBase: false
        //});
    }]);
})();
