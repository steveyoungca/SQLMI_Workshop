(function () {
    'use strict';
    angular
        .module('cloudsandbox.studentportal')
        .controller('PaymentController', PaymentController);

    PaymentController.$inject = ['$scope', '$state', '$window', '$location', '$sce', 'notifier', 'DataService', '$http', 'appConstant', 'serviceEndpoint', 'adalAuthenticationService', 'ModalService', '$timeout'];

    /// <summary>
    /// Controller for payment page.
    /// </summary>
    function PaymentController($scope, $state, $window, $location, $sce, notifier, DataService, $http, appConstant, serviceEndpoint, adalService, ModalService, $timeout) {
        var vm = this;
        var userId;
        $scope.Mode = 'None';

        if ($state.params.data == null && $location.absUrl().split('?')[1] == undefined)
            $state.go('main.home')

        if ($state.params.data != null)
        {
            $scope.workshop = $state.params.data.workshop;
            $scope.ticket = $state.params.data.ticket;
            userId = $state.params.data.userId;
            $scope.minute = 30;
            $scope.second = 0;
            $scope.Mode = 'Payment';
        }
        else if ($location.absUrl().split('?')[1] != undefined)
        {
            $scope.Mode = 'Tickets';
            getTicketData($location.absUrl().split('?')[1]);
        }

        $scope.onTimeout = function () {
            $scope.second--;
            if ($scope.second < 0) {
                $scope.second = 59;
                $scope.minute--;
            }

            if ($scope.minute == 0 && $scope.second == 0 && $scope.Mode == 'Payment')
            {
                ModalService.showModal({
                    templateUrl: '../app/views/shared/successModal.html',
                    controller: "ModalController",
                    inputs: {
                        title: "Session Timeout",
                        description: "We're sorry, but your session has been timed out and we will be releasing the seat held for you. Contact the admin for any questions.",
                        failureButtonText: "",
                        successButtonText: "OK"
                    }
                }).then(function (modal) {
                    modal.element.modal();
                    modal.close.then(function (result) {
                        $state.go('main.home');
                    })
                    .catch(function () {
                        $state.go('main.home');
                    });
                });
            }
            else
                mytimeout = $timeout($scope.onTimeout, 1000);
        }

        var mytimeout = $timeout($scope.onTimeout, 1000);

        $scope.pay = function ()
        {
            var cardDetails = {};
            cardDetails["CardNumber"] = $scope.CreditCard.CreditCardNumber;
            cardDetails["CVC"] = $scope.CreditCard.SecurityCode;
            cardDetails["ExpirationMonth"] = $scope.CreditCard.ExpiryDate.split('/')[0];
            cardDetails["ExpirationYear"] = $scope.CreditCard.ExpiryDate.split('/')[1];
            $http.post(appConstant.apiRoot + '/api/WSTickets/PurchaseTicket?userId=' + userId, cardDetails)
                .then(function (response) {
                    if (response.data.m_Item1)
                    {
                        notifier.notifyInfo("Payment completed successfully!");
                        $state.go("main.home");
                    }
                    else if (!response.data.m_Item1 && response.data.m_Item3 > 1)
                    {
                        notifier.notifyError("Payment failed: " + response.data.m_Item2);
                        notifier.notifyError("Error: You cannot retry more than once. Please contact the administrator.");
                        $state.go("main.home");
                    }
                    else
                        notifier.notifyError("Payment failed: " + response.data.m_Item2);
                })
                .catch(function (ex) {
                    notifier.notifyError(ex.data.ErrorDetail);
                });
        }

        function getTicketData(data)
        {
            $http.get(appConstant.apiRoot + '/api/WSTickets/GetPaymentDetails?data=' + data)
                .then(function (response) {
                    response.data.m_Item1.StartDate = moment(response.data.m_Item1.StartDate).format('D');
                    response.data.m_Item1.StartMonth = moment(response.data.m_Item1.StartMonth).format('MMMM');
                    response.data.m_Item1.StartTime = formatTime(response.data.m_Item1.StartTime);
                    response.data.m_Item1.EndTime = formatTime(response.data.m_Item1.EndTime);
                    $scope.workshop = response.data.m_Item1;
                    userId = response.data.m_Item2.Id;
                    $scope.CurrentUser = response.data.m_Item2;
                    $scope.workshopTicketsData = response.data.m_Item3;
                })
                .catch(function (ex) {
                    notifier.notifyError(ex.data.ErrorDetail);
                    $state.go('main.home');
                });
        }

        $scope.selectTicket = function (ticket) {
            initTicketSelected($scope.workshopTicketsData);
            ticket.IsSelected = true; 
            $scope.selected = true;
        }

        function initTicketSelected(tickets) {
            for (var i = 0; i < tickets.length; i++) {
                tickets[i].IsSelected = false;
            }
        }

        function formatTime(time) {
            var d = new Date(1, 1, 1, Math.floor(time / 100), (time % 100), 0, 0);
            return moment(d).format("hh:mm a");
        }

        $scope.goToPayment = function ()
        {
            for (var i = 0; i < $scope.workshopTicketsData.length; i++) {
                if ($scope.workshopTicketsData[i].IsSelected)
                {
                    $scope.ticket = $scope.workshopTicketsData[i];
                    var userData = { UserData: $scope.CurrentUser, TicketData: $scope.ticket }
                    $http.post(appConstant.apiRoot + '/api/WSTickets/ReserveTicket?type=waitlist', userData)
                        .then(function (response) {
                            $scope.minute = 30;
                            $scope.second = 0;
                            $scope.Mode = 'Payment';
                        });
                    
                }
                    
            }
        }
    }

})();