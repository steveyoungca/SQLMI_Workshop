(function () {
    'use strict';
    angular
        .module('cloudsandbox.studentportal')
        .controller('LabGuideShortcutController', LabGuideShortcutController);

    LabGuideShortcutController.$inject = ['$scope', '$rootScope', '$state', '$stateParams', '$window', '$location', '$sce', '$interval', '$timeout', 'notifier', 'DataService', '$http', 'appConstant', 'serviceEndpoint', 'adalAuthenticationService', 'ModalService', 'ngTableParams', '$compile', '$filter', '$cookies'];

    function LabGuideShortcutController($scope, $rootScope, $state, $stateParams, $window, $location, $sce, $interval, $timeout, notifier, DataService, $http, appConstant, serviceEndpoint, adalService, ModalService, ngTableParams, $compile, $filter, $cookies) {

        if ($state.current.name === 'main.labguideDirectShortcut') {
            $scope.DirectDeploymentId = $stateParams.deploymentId;
        }
        else {
            $scope.EncryptedDeploymentId = $stateParams.encryptedDeploymentId;
        }
        
        if ($scope.DirectDeploymentId !== undefined && $scope.DirectDeploymentId !== null) {
            getVoucherCodeAndUniqueName($scope.DirectDeploymentId, true);
        }
        else if ($scope.EncryptedDeploymentId !== undefined && $scope.EncryptedDeploymentId !== null) {
            getVoucherCodeAndUniqueName($scope.EncryptedDeploymentId);
        }
        else {
            $state.go('main.home');
        }

        function getVoucherCodeAndUniqueName(inputGuid, isDirect = false) {
            $http.get(appConstant.apiRoot + '/api/OnDemandLabUser/GetUserVoucherCode?inputGuid=' + inputGuid + '&isDirect=' + isDirect)
                .then(function (response) {
                    $scope.vouchercode = response.data.VoucherId;
                    $scope.eventUniqueName = response.data.EventUniqueName;

                    if ($scope.vouchercode !== null && $scope.eventUniqueName !== null) {
                        $state.go('main.labguide', { testdriveId: $scope.eventUniqueName, userInviteLink: $scope.vouchercode });
                    }
                    else {
                        notifier.notifyError("Invalid URL");
                        $state.go('main.home');
                    }
                })
                .catch(function (error) {
                    notifier.notifyError("Invalid URL");
                    $state.go('main.home');
                });
        }
    }
})();